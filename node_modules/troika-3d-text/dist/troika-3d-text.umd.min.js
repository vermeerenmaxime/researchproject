'use strict';(function(b,e){"object"===typeof exports&&"undefined"!==typeof module?e(exports,require("troika-three-text"),require("troika-3d"),require("three"),require("troika-three-utils")):"function"===typeof define&&define.amd?define(["exports","troika-three-text","troika-3d","three","troika-three-utils"],e):(b="undefined"!==typeof globalThis?globalThis:b||self,e(b.troika_3d_text={},b.troika_three_text,b.troika_3d,b.THREE,b.troika_three_utils))})(this,function(b,e,k,d,t){function l(){let a=k.createDerivedMaterial(new d.MeshBasicMaterial({transparent:!0,
opacity:.3,depthWrite:!1}),{uniforms:{rect:{value:new d.Vector4},depthAndCurveRadius:{value:new d.Vector2}},vertexDefs:"\nuniform vec4 rect;\nuniform vec2 depthAndCurveRadius;\n",vertexTransform:"\nfloat depth = depthAndCurveRadius.x;\nfloat rad = depthAndCurveRadius.y;\nposition.x = mix(rect.x, rect.z, position.x);\nposition.y = mix(rect.w, rect.y, position.y);\nposition.z = mix(-depth * 0.5, depth * 0.5, position.z);\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * (rad - position.z), rad - cos(angle) * (rad - position.z));\n  // TODO fix normals: normal.xz = vec2(sin(angle), cos(angle));\n}\n"}),
b={normal:new d.Mesh((new d.BoxBufferGeometry(1,1,1)).translate(.5,.5,.5),a),curved:new d.Mesh((new d.BoxBufferGeometry(1,1,1,32)).translate(.5,.5,.5),a)};return(l=()=>b)()}let m=new d.Vector4;class u extends k.Instanceable3DFacade{constructor(a){super(a);this.curveRadius=this.depth=0;this._color=new d.Color;this._rect=new d.Vector4}afterUpdate(){let {top:a,right:b,bottom:e,left:c,color:n,depth:h,curveRadius:g}=this;this.instancedThreeObject=l()[g?"curved":"normal"];this._color.equals(n)||this.setInstanceUniform("diffuse",
this._color=new d.Color(n));this._rect.equals(m.set(c,a,b,e))||this.setInstanceUniform("rect",m.clone());!h===this._depth&&g===this._curveRadius||this.setInstanceUniform("depthAndCurveRadius",new d.Vector2(this._depth=h,this._curveRadius=g));super.afterUpdate()}getBoundingSphere(){return null}}let v=new d.Matrix4,w=new d.Plane,p=new d.Vector2,x=new d.Vector3,q=Object.freeze([-Infinity,-Infinity,Infinity,Infinity]);class y extends k.ListFacade{constructor(a,b){super(a);let d=a.threeObject;this.rangeColor=
52479;this.clipRect=q;this.curveRadius=0;this.template={key:(g,a)=>`rect${a}`,facade:u,top:a=>Math.min(this.clipRect[3],Math.max(this.clipRect[1],a.top)),right:a=>Math.min(this.clipRect[2],Math.max(this.clipRect[0],a.right)),bottom:a=>Math.min(this.clipRect[3],Math.max(this.clipRect[1],a.bottom)),left:a=>Math.min(this.clipRect[2],Math.max(this.clipRect[0],a.left)),depth:a=>.25*(a.top-a.bottom),color:a=>this.rangeColor,curveRadius:a=>this.curveRadius,visible:a=>{let b=this.clipRect;return a.right>
b[0]&&a.top>b[1]&&a.left<b[2]&&a.bottom<b[3]},renderOrder:a=>this.renderOrder||0};let c=c=>{var g=d.textRenderInfo;if(g){const r=d.worldPositionToTextCoords(c.intersection.point,p);if(g=e.getCaretAtPoint(g,r.x,r.y))b(g.charIndex,g.charIndex),a.addEventListener("drag",f),a.addEventListener("dragend",h);c.preventDefault()}},f=a=>{var c=d.textRenderInfo;if(a.ray&&c){var f;(f=(f=a.intersection)&&f.object===d&&f.point?d.worldPositionToTextCoords(f.point,p):a.ray.clone().applyMatrix4(t.invertMatrix4(d.matrixWorld,
v)).intersectPlane(w.setComponents(0,0,1,0),x))&&(c=e.getCaretAtPoint(c,f.x,f.y))&&b(this.selectionStart,c.charIndex);a.preventDefault()}},h=b=>{a.removeEventListener("drag",f);a.removeEventListener("dragend",h)};a.addEventListener("dragstart",c);a.addEventListener("mousedown",c);this._cleanupEvents=()=>{h();a.removeEventListener("dragstart",c);a.removeEventListener("mousedown",c)}}afterUpdate(){this.data=e.getSelectionRects(this.textRenderInfo,this.selectionStart,this.selectionEnd);super.afterUpdate()}set clipRect(a){this._clipRect=
a&&Array.isArray(a)&&4===a.length?a:q}get clipRect(){return this._clipRect}destructor(){this._cleanupEvents();super.destructor()}}let z="text anchorX anchorY font fontSize letterSpacing lineHeight maxWidth overflowWrap direction textAlign textIndent whiteSpace material color colorRanges fillOpacity outlineOpacity outlineColor outlineWidth outlineOffsetX outlineOffsetY outlineBlur strokeColor strokeWidth strokeOpacity curveRadius depthOffset clipRect orientation glyphGeometryDetail sdfGlyphSize debugSDF".split(" ");
class A extends k.Object3DFacade{constructor(a){let b=new e.Text;b.geometry.boundingSphere.version=0;super(a,b);this.selectable=!1;this.selectionStart=this.selectionEnd=-1;this.onSyncComplete=this.onSyncStart=null;b.addEventListener("syncstart",a=>{this.notifyWorld("text3DSyncStart");if(this.onSyncStart)this.onSyncStart()});b.addEventListener("synccomplete",a=>{if(!this.isDestroying&&(b.geometry.boundingSphere.version++,this.afterUpdate(),this.notifyWorld("text3DSyncComplete"),this.requestRender(),
this.onSyncComplete))this.onSyncComplete()})}get textRenderInfo(){return this.threeObject.textRenderInfo}afterUpdate(){let a=this.threeObject;z.forEach(b=>{a[b]=this[b]});a.sync();super.afterUpdate();this.text!==this._prevText&&(this.selectionStart=this.selectionEnd=-1,this._prevText=this.text);this._updateSelection()}_updateSelection(){let {selectable:a,selectionStart:b,selectionEnd:d}=this,c=this._selectionFacade;a!==this._selectable&&((this._selectable=a)?c=this._selectionFacade=new y(this,(a,
b)=>{this.selectionStart=a;this.selectionEnd=b;this._updateSelection();this.requestRender()}):(c&&(c.destructor(),c=this._selectionFacade=null),this.selectionStart=this.selectionEnd=-1));c&&(c.textRenderInfo=this.threeObject.textRenderInfo,c.selectionStart=b,c.selectionEnd=d,c.curveRadius=this.curveRadius||0,c.clipRect=this.clipRect,c.renderOrder=this.renderOrder,c.afterUpdate())}destructor(){this.threeObject.dispose();this._selectionFacade&&this._selectionFacade.destructor();super.destructor()}}
Object.defineProperty(b,"GlyphsGeometry",{enumerable:!0,get:function(){return e.GlyphsGeometry}});Object.defineProperty(b,"TextMesh",{enumerable:!0,get:function(){return e.Text}});Object.defineProperty(b,"configureTextBuilder",{enumerable:!0,get:function(){return e.configureTextBuilder}});Object.defineProperty(b,"dumpSDFTextures",{enumerable:!0,get:function(){return e.dumpSDFTextures}});Object.defineProperty(b,"getCaretAtPoint",{enumerable:!0,get:function(){return e.getCaretAtPoint}});Object.defineProperty(b,
"getSelectionRects",{enumerable:!0,get:function(){return e.getSelectionRects}});Object.defineProperty(b,"preloadFont",{enumerable:!0,get:function(){return e.preloadFont}});Object.defineProperty(b,"typesetterWorkerModule",{enumerable:!0,get:function(){return e.typesetterWorkerModule}});b.Text3DFacade=A;Object.defineProperty(b,"__esModule",{value:!0})})
